// This code was initially generated by ServiceFoundry
// Copyright 2004-present Facebook. All Rights Reserved.

#include "common/config/Flags.h"
#include "common/init/Init.h"
#include "common/services/cpp/ServiceFramework.h"
#include "logdevice/scribe/ScribeServiceHandler.h"

#include <thrift/lib/cpp2/server/ThriftServer.h>

#include <memory>

using apache::thrift::ThriftServer;
using facebook::scribe::ScribeServiceHandler;
using facebook::initFacebook;
using facebook::services::ServiceFramework;

DEFINE_int32(port, 20132, "Service port");
DEFINE_int32(
    thrift_min_compress_bytes,
    200,
    "Minimum response compression size");

int main(int argc, char** argv) {
  initFacebook(&argc, &argv);
  ServiceFramework service("Scribe");

  auto handler = std::make_shared<ScribeServiceHandler>();
  auto server = std::make_shared<ThriftServer>();

  server->setMinCompressBytes(FLAGS_thrift_min_compress_bytes);

  server->setPort(FLAGS_port);
  server->setInterface(handler);

  LOG(INFO) << "Scribe running on port: " << FLAGS_port;

  service.addThriftService(server, handler.get(), FLAGS_port);
  service.go();

  return 0;
}
